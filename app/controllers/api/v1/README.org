* Files
| Name                   | Description                            |
|------------------------+----------------------------------------|
| README.org             | this file                              |
| base_controller.rb     | base controller                        |
| sessions_controller.rb | log in                                 |
| users_controller.rb    | user create, show                      |
| virfiles_controller.rb | The file system that user could access |


* Description
** tips
    - The token have to be changed after 3 times error
    - Please change all the "http://localhost:3000" into "http://lys.webcam"
    - path == "" for root directory for every user
    - Every method to operate the virfile have to be verified at the very beggining. We have to receive {verify_info, :user_name, :authen_token}. 403 error for wrong authen_token
** users_controller
*** show
    - show the profile by token and user_name after verify.
    - POST   /api/v1/users/profile(.:format)
    - return {@user}.
      + attribute of @user /:name, :register_date/
    - 400 for error name & 403 for error token
    - 400 or 403 e.g.
      + curl -s "http://localhost:3000/api/v1/users/profile" -X POST -H 'Content-Type: application/json' -d '{"show_user":{"name":"test00", "authen_token":"50z7tPyBiKomBRd5i5iTdMG4QKZlZ3cT0qgVQWRoq49bwj52nW4dvhd0zJ4xbVT587Qx6mGOAUiBbzA8RNh67w="}}' 
      + 403 error
    - successful e.g.
      + curl -s "http://localhost:3000/api/v1/users/profile" -X POST -H 'Content-Type: application/json' -d '{"show_user":{"name":"test00", "authen_token":"50z7tPyBiKomBRd5i5iTdMG4QKZlZ3cT0qgVQWRoq49bwj52nW4dvhd0zJ4xbVT587Qx6mGOAUiBbzA8RNh67w=="}}' 
      + {"user":{"name":"test00","register_date":"2015-07-20"}}
*** create(register)
    - register a new user
    - POST   /api/v1/users(.:format)
    - receive {:name, :password}; 
    - feedback {@user, @state}
      * Meaning of state:
        + -1  |name| < 3
        + -2  |password| < 6
        + -3 user already exist.
        + 0 no error
      * attribute of @user: as same as those in show

    - short password e.g.
      + curl -s "http://localhost:3000/api/v1/users" -X POST -H 'Content-Type: application/json' -d '{"register_user":{"name":"test0", "password":"12"}}' 
      + {"state":-2}
    - short user name e.g.
      + curl -s "http://localhost:3000/api/v1/users" -X POST -H 'Content-Type: application/json' -d '{"register_user":{"name":"t", "password":"12345678"}}' 
      + {"state":-1}
    - successful e.g. 
      + curl -s "http://localhost:3000/api/v1/users" -X POST -H 'Content-Type: application/json' -d '{"register_user":{"name":"test00", "password":"12345678"}}' 
      + {"state":0,"user":{"name":"test00","register_date":"2015-07-20","authen_token":"50z7tPyBiKomBRd5i5iTdMG4QKZlZ3cT0qgVQWRoq49bwj52nW4dvhd0zJ4xbVT587Qx6mGOAUiBbzA8RNh67w=="}}    
    - duplicate name e.g.
      +  curl -s "http://localhost:3000/api/v1/users" -X POST -H 'Content-Type: application/json' -d '{"register_user":{"name":"test00", "password":"12345678"}}' 
      + {"state":-3}
** sessions_controller
   
*** create(login)
    - login and get user information & token
    - POST   /api/v1/sessions(.:format)
    - Receive {@user, :name, password}
    - feedback {login_suc, @user}
      + /login_suc = true/ if success.
      + /@user = nil/ when /login_suc == false/
      + attribute of @user :name, :register_date, :authen_token
    - 401 error if login fail
    - successful e.g.   
      + curl -s "http://localhost:3000/api/v1/sessions" -X POST -H 'Content-Type: application/json' -d '{"user":{"name":"test00", "password":"12345678"}}' 
      + {"login_suc":true,"user":{"name":"test00","register_date":"2015-07-20","authen_token":"50z7tPyBiKomBRd5i5iTdMG4QKZlZ3cT0qgVQWRoq49bwj52nW4dvhd0zJ4xbVT587Qx6mGOAUiBbzA8RNh67w=="}}
    - fail e.g.
      +  curl -s "http://localhost:3000/api/v1/sessions" -X POST -H 'Content-Type: application/json' -d '{"user":{"name":"test00", "password":"123456789"}}' 
      + 401 error
        

** virfiles_controller
   
*** index(list all the files in the directory)
  - list files and directory in :path of :user_name
  - POST   /api/v1/virfiles/index(.:format)
  - receive {abs_path, verify_info}
    + attributes :user_name, :path
    + learn more about verify_info in tips
  - feedback {list}
    + list is an array, its element is virfiles(:id, :name, :if_file)
    + /if_file == true/ means that it's a file, a directory otherwise.
  - e.g.
    + curl -s "http://localhost:3000/api/v1/virfiles/index" -X POST -H 'Content-Type: application/json' -d '{"abs_path":{"user_name":"test00", "path":""}, "authen_token":"50z7tPyBiKomBRd5i5iTdMG4QKZlZ3cT0qgVQWRoq49bwj52nW4dvhd0zJ4xbVT587Qx6mGOAUiBbzA8RNh67w=="}' 
    + {"list":[{"name":"first","if_file":true},{"name":"firstd","if_file":true},{"name":"firstd1","if_file":false}]}

  - e.g.
    + curl -s "http://localhost:3000/api/v1/virfiles/index" -X POST -H 'Content-Type: application/json' -d '{"abs_path":{"user_name":"test00", "path":"firstd1/"}, "authen_token":"Je6aWTPs/PoLRJ8yUm1ve1QKQ5d8E0KACdALlRkt7PZ6WX7ZKqUDIUb/F/ZJPqeYFpPO3dMMSIDuO6/C1ZOmWA=="}' 
    + {"list":[{"name":"secondfile","if_file":true}]}
*** create
    - POST   /api/v1/virfiles(.:format) 
    - receive {abs_path, file_inf, frag_arr, verify_info}
      + file_inf includes name & frag_num
      + abs_path includes user_name & path & if_file. We will create a new file or directory under "path" or "user_name"
        * if_file == 1 means it's a file, otherwise a directory
    - feedback {state}
    - fail e.g.
      + curl -s "http://localhost:3000/api/v1/virfiles" -X POST -H 'Content-Type: application/json' -d '{"abs_path":{"user_name":"test00", "path":""}, "file_inf":{"name":"ff2", "frag_num":2, "if_file": true, "file_sha1":"123", "file_md5":"123"}, "frag_arr" : [{"addr":"www/baidu/com", "index":1, "sha1":"123", "md5":"123", "server_name":"xinlang"}, {"addr":"www.google.com", "index":2, "sha1":"123", "md5":"123", "server_name":"xinlang"}], "authen_token" : "wrong"}' 
      + 403 error
    - create a file successful
      +   curl -s "http://localhost:3000/api/v1/virfiles" -X POST -H 'Content-Type: application/json' -d '{"abs_path":{"user_name":"test00", "path":""}, "file_inf":{"name":"ff2", "frag_num":2, "if_file": true, "file_sha1":"123", "file_md5":"123"}, "frag_arr" : [{"addr":"www/baidu/com", "index":1, "sha1":"123", "md5":"123", "server_name":"xinlang"}, {"addr":"www.google.com", "index":2, "sha1":"123", "md5":"123", "server_name":"xinlang"}], "authen_token" : "Q0ksIastifLXxNU4aAzh/o09RWzy1lVESvcTHYdLaIfWywUW5PtbeikEoPVO2+z5GzJpCUSxqudEfCtTulRWYg=="}' 
     
    - create a directory successful
      + curl -s "http://localhost:3000/api/v1/virfiles" -X POST -H 'Content-Type: application/json' -d '{"abs_path":{"user_name":"test00", "path":""}, "file_inf":{"name":"firstd1", "frag_num":0, "if_file":false}, "authen_token":"50z7tPyBiKomBRd5i5iTdMG4QKZlZ3cT0qgVQWRoq49bwj52nW4dvhd0zJ4xbVT587Qx6mGOAUiBbzA8RNh67w=="}' 
      + {"suc":true}
*** show
    - show all the frag of :path
    - POST   /api/v1/virfiles/show(.:format) 
    - receive {abs_path}
      + attributes  :user_name, :path
    - feedback {if_file, frag_num, frag_list}
      + /if_file == true/ for file
      + frag_num is the number of frag.
      + frag_list is the list of {addr, index}
    - e.g.
      + curl -s "http://localhost:3000/api/v1/virfiles/show" -X POST -H 'Content-Type: application/json' -d '{"abs_path":{"user_name":"test00", "path":"firstd1"}, "authen_token":"Je6aWTPs/PoLRJ8yUm1ve1QKQ5d8E0KACdALlRkt7PZ6WX7ZKqUDIUb/F/ZJPqeYFpPO3dMMSIDuO6/C1ZOmWA=="}' 
      + {"if_file":false,"frag_num":0}
    - e.g.
      + curl -s "http://localhost:3000/api/v1/virfiles/show" -X POST -H 'Content-Type: application/json' -d '{"abs_path":{"user_name":"test00", "path":"first"}, "authen_token":"Je6aWTPs/PoLRJ8yUm1ve1QKQ5d8E0KACdALlRkt7PZ6WX7ZKqUDIUb/F/ZJPqeYFpPO3dMMSIDuO6/C1ZOmWA=="}' 
      + {"if_file":true,"frag_num":2,"file_sha1":"123","file_md5":"123","frag_list":[{"addr":"www.google.com","index":2,"sha1":"123","md5":"123","server_name":"xinlang"},{"addr":"www/baidu/com","index":1,"sha1":"123","md5":"123","server_name":"xinlang"}]}

*** destroy
    - delete :path of :user_name
    - DELETE /api/v1/virfiles/delete(.:format) 
    - receive {abs_path}
      + attribute :user_name, :path
    - feedback {suc}
    - e.g.
      + curl -s "http://localhost:3000/api/v1/virfiles/delete" -X DELETE -H 'Content-Type: application/json' -d '{"abs_path":{"user_name":"test00", "path":"firstd"}, "authen_token":"Je6aWTPs/PoLRJ8yUm1ve1QKQ5d8E0KACdALlRkt7PZ6WX7ZKqUDIUb/F/ZJPqeYFpPO3dMMSIDuO6/C1ZOmWA=="}'  
      + {"suc":true}


* Security

** XSS(Cross-Site Scripting)
   - It's the most common hack way.
   - Fortunately, after rails 3, all the stuffs in View are "escape" by default.
** CSRF(Cross-site request forgery)
   - All the reading or require operation only use GET method.
   - Security token for POST, DELETE and etc.
     + add "protect_from_forgery with: :exception" in app/controllers/application_controller.rb
** SQL injection
   - It's one of the most horribe attack.
   - We have to escape all the statement that passes parameters to function which controls SQL.
     + For /Where/ method in /ActiveRecord/ , never use string parameters. Because /Hash/ and /Array/ can deal with this hack automatically.
       * e.g. /Project.where( { :name => params[:name] } )/
     + No automatical escape for the method below:
       * find_by_sql
       * execute
       * where with string parameters
       * group
       * order
** Mass assignment
   - It's a specific security problem caused by the convenient of rails
   - We use /Strong Parameters/ to make sure that it's safe enough to /Mass assignment/ operation.

** Filter sensitive information
   - e.g. for password
     + /Rails.application.config.filter_parameters += [:password]/ in /config/initializers/filter_parameter_logging.rb/
     + Processing UsersController#create (for 127.0.0.1 at 2009-01-02 11:02:33) [POST]
   Parameters: {"user"=>{"name"=>"susan", "password_confirmation"=>"[FILTERED]", "password"=>"[FILTERED]"}, "commit"=>"Register", "action"=>"create", "authenticity_token"=>"9efc03bcc37191d8a6dc3676e2e7890ecdfda0b5", "controller"=>"users"}
